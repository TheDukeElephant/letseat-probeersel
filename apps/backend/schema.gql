# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  email: String!
  groupIds: [String!]
  name: String!
  password: String!
  phone: String
  role: Role
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GroupModel {
  adminCount: Float!
  admins: [UserModel!]
  createdAt: DateTime!
  id: ID!
  name: String!
  userCount: Float!
  users: [UserModel!]
}

type Mutation {
  addGroupAdmin(groupId: String!, userId: String!): GroupModel!
  addUserToGroup(groupId: String!, userId: String!): GroupModel!
  createGroup(name: String!): GroupModel!
  createUser(data: CreateUserInput!): UserModel!
  deleteGroup(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  removeGroupAdmin(groupId: String!, userId: String!): GroupModel!
  removeUserFromGroup(groupId: String!, userId: String!): GroupModel!
  updateGroup(id: String!, name: String!): GroupModel!
  updateUser(data: UpdateUserInput!): UserModel!
}

type Query {
  group(id: String!): GroupModel
  groups: [GroupModel!]!
  user(id: String!): UserModel
  users: [UserModel!]!
}

enum Role {
  ADMIN
  RESTAURANT
  USER
}

input UpdateUserInput {
  email: String
  groupIds: [String!]
  id: String!
  name: String
  password: String
  phone: String
  role: Role
}

type UserModel {
  createdAt: DateTime!
  email: String!
  groups: [GroupModel!]
  id: ID!
  name: String!
  phone: String
  role: Role!
  updatedAt: DateTime!
}